## Игнорировать временные файлы Visual Studio, результаты сборки и
## файлы, сгенерированные популярными надстройками Visual Studio.
##
## Получить последнюю версию с https://github.com/github/gitignore/blob/main/VisualStudio.gitignore

# Пользовательские файлы
*.rsuser
*.суо
*.пользователь
*.userosscache
*.sln.docstates

# Пользовательские файлы (MonoDevelop/Xamarin Studio)
*.userprefs

# Моно автоматически сгенерированные файлы
mono_crash.*

# Результаты сборки
[Дд]ебаг/
[Dd]ebugPublic/
[Rr]отпустить/
[Rr]освобождает/
х64/
х86/
[Ww][Ii][Nn]32/
[Аа][Рр][Мм]/
[Аа][Рр][Мм]64/
корп./
[Bb]в/
[Оо] Ъ /
[Ll]ог/
[Ll]огс/

# Папка кэша/параметров Visual Studio 2015/2017
.против/
# Раскомментируйте, если у вас есть задачи, которые создают статические файлы проекта в wwwroot
#wwwрут/

# Visual Studio 2017 автоматически сгенерированные файлы
Сгенерировано\Файлы/

# Результаты теста MSTest
[Tt]эст[Rr]результат*/
[Bb]уилд[Ll]ог.*

# НУнит
*.VisualState.xml
TestResult.xml
нунит-*.xml

# Сборка результатов проекта ATL
[Dd]ebugPS/
[Rr]освобождениеPS/
dlldata.c

# Результаты тестов
BenchmarkDotNet.Артефакты/

# .NET ядро
проект.lock.json
проект.фрагмент.lock.json
артефакты/

# Скаффолдинг ASP.NET
ЛесаReadMe.txt

# СтильПолицейский
Стайлкопрепорт.xml

# Файлы, созданные Visual Studio
*_IC
*_ПК
*_ч.ч
*.илк
*.мета
*.объект
*.iobj
*.pch
*.pdb
*.ipdb
*.pgc
*.пгд
*.rsp
*.sbr
*.tlb
*.tli
*.tlh
*.tmp
*.tmp_proj
*_wpftmp.csproj
*.журнал
*.тлог
*.vspscc
*.vsscc
.строит
*.pidb
*.svclog
*.scc

# Тестовые файлы наглости
_Наглость*

# Кэш-файлы Visual C++
ипч/
*.aps
*.ncb
*.opendb
*.opensdf
*.sdf
*.cachefile
*.VC.db
*.VC.VC.opendb

# Профайлер Visual Studio
*.psess
*.vsp
*.VSpx
*.сап

# Файлы трассировки Visual Studio
*.e2e

# Локальная рабочая область TFS 2012
$тф/

# Инструментарий автоматизации навигации
*.gpState

# ReSharper — надстройка для кодирования .NET.
_ReSharper*/
*.[Rr]e[Ss]арфист
*.DotSettings.пользователь

# TeamCity — надстройка для сборки
_TeamCity*

# DotCover — это инструмент для покрытия кода
*.dotCover

# AxoCover — инструмент для покрытия кода
.axoCover/*
!.axoCover/settings.json

# Coverlet — это бесплатный кроссплатформенный инструмент для покрытия кода.
покрытие*.json
покрытие*.xml
покрытие*.info

# Результаты покрытия кода Visual Studio
*.покрытие
*.coveragexml

# NCrunch
_NCrunch_*
.*хруст*.local.xml
nCrunchTemp_*

# МогучийЛось
*.мм.*
АвтоТест.Нет/

# Веб-верстак (sass)
.sass-кэш/

# Выходная папка Installshield
[Е]экспресс/

# DocProject — надстройка для создания документации
DocProject/buildhelp/
DocProject/Справка/*.HxT
DocProject/Справка/*.HxC
DocProject/Справка/*.hhc
DocProject/Справка/*.hhk
DocProject/Справка/*.hhp
DocProject/Справка/Html2
DocProject/Справка/html

# Каталог с однократным щелчком
публиковать/

# Публикация веб-вывода
*.[Pp]опубликовать.xml
*.azurePubxml
# Примечание: прокомментируйте следующую строку, если вы хотите проверить настройки веб-развертывания,
# но строки подключения к базе данных (с потенциальными паролями) будут незашифрованными
*.pubxml
*.publishproj

# Параметры публикации веб-приложения Microsoft Azure. Прокомментируйте следующую строку, если хотите
# проверьте настройки публикации веб-приложения Azure, но содержит конфиденциальную информацию
# в этих скриптах будет незашифрованным
Опубликовать скрипты/

# NuGet-пакеты
*.nupkg
# Пакеты символов NuGet
*.snupkg
# Папка пакетов может быть проигнорирована из-за восстановления пакетов
**/[Pp]пакеты/*
# кроме build/, который используется в качестве цели MSBuild.
!**/[Pp]пакеты/сборка/
# При необходимости раскомментируйте, однако обычно он будет перегенерирован при необходимости
#!**/[Pp]ackages/repositories.config
# Файлы project.json NuGet v3 создают больше игнорируемых файлов
*.nuget.props
*.nuget.цели

# Выходные данные сборки Microsoft Azure
csx/
*.build.csdef

# Эмулятор Microsoft Azure
ecf/
рцф/

# Каталоги и файлы пакетов приложений Магазина Windows
Пакеты приложений/
Набор Артефактов/
Пакет.StoreAssociation.xml
_pkginfo.txt
*.приложение
*.appxbundle
*.appxupload

# Кеш-файлы Visual Studio
# файлы, оканчивающиеся на .cache, можно игнорировать
*.[Cc]боль
# но следите за каталогами, оканчивающимися на .cache
!?*.[Cc]болеть/

# Другие
КлиентБин/
~$*
*~
*.dbmdl
*.dbproj.schemaview
*.jfm
*.pfx
*.опубликовать настройки
orleans.codegen.cs

# Включение файлов со строгими именами может представлять угрозу безопасности
# (https://github.com/github/gitignore/pull/2483#issue-259490424)
#*.снк

# Так как есть несколько рабочих процессов, раскомментируйте следующую строку, чтобы игнорировать Bower_components
# (https://github.com/github/gitignore/pull/1529#issuecomment-104372622)
#bower_components/

# Проекты RIA/Silverlight
Сгенерированный_код/

# Резервное копирование файлов и отчетов о преобразовании старого файла проекта
# на более новую версию Visual Studio. Резервные файлы не нужны,
# потому что у нас есть git ;-)
_UpgradeReport_Files/
Резервный*/
Журнал обновления*.XML
Журнал обновления*.htm
ServiceFabricBackup/
*.rptproj.bak

# файлы SQL-сервера
*.мдф
*.ldf
*.ndf

# Проекты бизнес-аналитики
*.rdl.данные
*.бим.макет
*.бим_*.настройки
*.rptproj.rsuser
*- [Bb]ackup.rdl
*- [Bb]backup ([0-9]).rdl
*- [Bb]backup ([0-9][0-9]).rdl

# Подделки Майкрософт
ПодделкиСборки/

# Файл настроек плагина GhostDoc
*.GhostDoc.xml

# Инструменты Node.js для Visual Studio
.ntvs_analysis.dat
node_modules/

# Журнал сборки Visual Studio 6
*.плг

# Файл опций рабочего пространства Visual Studio 6
*.опт

# Файл рабочей области, автоматически сгенерированный Visual Studio 6 (содержит, какие файлы были открыты и т. д.)
*.vbw

# Файл проекта, автоматически сгенерированный Visual Studio 6 (содержит, какие файлы были открыты и т. д.)
*.vbp

# Рабочее пространство Visual Studio 6 и файл проекта (рабочие файлы проекта, содержащие файлы для включения в проект)
*.dsw
*.дсп

# Технические файлы Visual Studio 6
*.ncb
*.aps

# Выходные данные сборки Visual Studio LightSwitch
**/*.HTMLClient/Сгенерированные артефакты
**/*.DesktopClient/Сгенерированные артефакты
**/*.DesktopClient/ModelManifest.xml
**/*.Сервер/Сгенерированные Артефакты
**/*.Сервер/ModelManifest.xml
_Pvt_Extensions

# Менеджер зависимостей пакетов
.пакет/пакет.exe
пакет-файлы/

# ФЕЙК - F# Сделать
.не настоящие/

# Персональные настройки CodeRush
.cr/личный

# Инструменты Python для Visual Studio (PTVS)
__pycache__/
*.pyc

# Cake — раскомментируйте, если вы его используете
# инструменты/**
# !tools/packages.config

# Студия вкладок
*.тсс

# Конфигурационный файл JustMock от Telerik
*.jmconfig

# Выходные данные сборки BizTalk
*.btp.cs
*.btm.cs
*.odx.cs
*.xsd.cs

# Результаты анализа пользовательского интерфейса OpenCover
Открытая обложка/

# Выходные данные локального запуска Azure Stream Analytics
ASALocalRun/

# Двоичный и структурированный журнал MSBuild
*.бинлог

# Файл конфигурации отладчика графического процессора NVidia Nsight
*.nvuser

# Рабочая папка MFractors (инструмент повышения производительности Xamarin)
.мфрактор/

# Локальная история для Visual Studio
.localhistory/

# Файлы истории Visual Studio (VSHistory)
.vshistory/

# Временная база данных BeatPulse Healthcheck
Healthchecksdb

# Папка резервного копирования для инструмента Package Reference Convert в Visual Studio 2017
МиграцияBackup/

# Рабочая папка Ionide (кроссплатформенные инструменты F# VS Code)
.ионид/

# Fody - автоматически сгенерированная XML-схема
FodyWeavers.xsd

# Файлы кода VS для тех, кто работает с несколькими инструментами
.vscode/*
!.vscode/settings.json
!.vscode/tasks.json
!.vscode/launch.json
!.vscode/расширения.json
*.code-рабочая область

# Локальная история для кода Visual Studio
.история/

# Файлы установщика Windows из выходных данных сборки
*.такси
*.msi
*.msix
*.msm
*.MSP

# Наездник JetBrains
*.sln.iml

x64/
.vs/